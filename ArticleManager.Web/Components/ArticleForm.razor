<EditForm Model="@Article" OnValidSubmit="@(e => OnSave.InvokeAsync(Article))">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="category">Category: </label>
        <InputSelect id="category" TValue="int" @bind-Value="Article.CategoryId" class="form-control">
            @foreach (var category in AvailableCategories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => Article.CategoryId)" />
    </div>

    <div class="form-group">
        <label for="name">Title: </label>
        <InputText id="name" @bind-Value="Article.Title" class="form-control" />
        <ValidationMessage For="@(() => Article.Title)" />
    </div>

    <div class="form-group">
        <label for="content">Content: </label>
        <InputTextArea id="content" @bind-Value="Article.Content" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-warning" @onclick="OnCancel">Cancel</button>
</EditForm>

@code {
    [Parameter]
    public Article Article { get; set; }
    [Parameter]
    public Category[] AvailableCategories { get; set; } = new Category[0];
    [Parameter]
    public EventCallback<Article> OnSave { get; set; }
    [Parameter]
    public EventCallback OnCancel { get; set; }
}
